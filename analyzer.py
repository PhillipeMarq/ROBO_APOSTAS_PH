import requests
from datetime import datetime, timedelta

API_KEY = "a99b6f47c2msh0ff00f621e1eb56p18dbaajsn45cb42a452c0"
BASE_URL = "https://api-football-v1.p.rapidapi.com/v3/fixtures"

HEADERS = {
    "X-RapidAPI-Key": API_KEY,
    "X-RapidAPI-Host": "api-football-v1.p.rapidapi.com"
}

# Lista de ligas brasileiras e internacionais que t√™m clubes do Brasil
LIGAS_BRASILEIRAS = [
    "Brasileir√£o S√©rie A",
    "Brasileir√£o S√©rie B",
    "Brasileir√£o S√©rie C",
    "Brasileir√£o S√©rie D",
    "Copa do Brasil",
    "Campeonato Paulista",
    "Campeonato Carioca",
    "Campeonato Mineiro",
    "Campeonato Ga√∫cho",
    "Copa Libertadores",
    "Copa Sul-Americana",
]

# Lista de times brasileiros para filtrar os jogos
TIMES_BRASILEIROS = [
    "Flamengo", "Palmeiras", "Corinthians", "S√£o Paulo", "Gr√™mio", "Internacional",
    "Athletico-PR", "Atl√©tico-MG", "Botafogo", "Vasco", "Cruzeiro", "Santos",
    "Bahia", "Fortaleza", "Cuiab√°", "Goi√°s", "Coritiba", "Bragantino", "Am√©rica-MG",
    "Chapecoense", "Cear√°", "Vit√≥ria", "Juventude", "Paysandu", "Sport", "ABC",
    "CRB", "Ava√≠", "Ituano", "Tombense", "Londrina", "Novorizontino", "Botafogo-SP",
    "CSA", "Figueirense", "Ypiranga", "Ferrovi√°ria", "Remo", "Manaus", "Altos",
    "S√£o Bernardo", "Mirassol", "Botafogo-PB", "Volta Redonda"
]

def analisar_jogos_proximos_dias(dias=4):
    mensagens = []
    hoje = datetime.utcnow()

    for i in range(dias):
        data = (hoje + timedelta(days=i)).strftime("%Y-%m-%d")
        params = {"date": data, "timezone": "America/Sao_Paulo"}
        response = requests.get(BASE_URL, headers=HEADERS, params=params)

        if response.status_code != 200:
            mensagens.append(f"‚ö†Ô∏è Erro ao buscar jogos do dia {data}.")
            continue

        jogos = response.json().get("response", [])

        for jogo in jogos:
            time_casa = jogo["teams"]["home"]["name"]
            time_fora = jogo["teams"]["away"]["name"]
            liga = jogo["league"]["name"]
            horario = jogo["fixture"]["date"]
            horario_formatado = datetime.strptime(horario, "%Y-%m-%dT%H:%M:%S%z").strftime("%d/%m %H:%M")

            # Filtro por ligas brasileiras ou times brasileiros
            if (time_casa in TIMES_BRASILEIROS or time_fora in TIMES_BRASILEIROS) or liga in LIGAS_BRASILEIRAS:
                mensagens.append(
                    f"*üèÜ Liga:* {liga}\n"
                    f"*üïí Hor√°rio:* {horario_formatado}\n"
                    f"*‚öîÔ∏è Jogo:* {time_casa} x {time_fora}\n"
                    f"*üéØ Sinal:* Em breve com IA ü§ñ"
                )

    if not mensagens:
        mensagens.append("‚ùå Nenhum jogo brasileiro encontrado nos pr√≥ximos dias.")

    return mensagens
